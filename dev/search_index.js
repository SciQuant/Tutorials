var documenterSearchIndex = {"docs":
[{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/dynamics.jl\"","category":"page"},{"location":"pages/t001_dynamics/#Tutorial-1:-Dynamics","page":"1 Dynamics","title":"Tutorial 1: Dynamics","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"How to declare dynamics with arbitrary coefficients,\nHow to declare dynamics with known coefficients,\nHow to declare dynamical systems.","category":"page"},{"location":"pages/t001_dynamics/#Introduction","page":"1 Dynamics","title":"Introduction","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"A dynamics represents continuous time, D-dimensional Ito Systems of Stochastic Differential Equations (SDEs) in a time span mathbbI = leftt_0 T right:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"dvecu(t) = f(t vecu(t)) cdot dt + g(t vecu(t)) cdot dvecW(t) quad vecu(t_0) = vecu_0","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"with drift coefficient f colon mathbbI times mathbbR^D rightarrow mathbbR^D, diffusion coefficient g colon mathbbI times mathbbR^D rightarrow mathbbR^D times M, M-dimensional driving Wiener correlated or uncorrelated process vecW(t) and initial condition vecu_0.","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"The library represents dynamics by means of two main types, SystemDynamics and ModelDynamics. The first case refers to SDEs with arbitrary coefficients while the second case is a supertype for dynamics with known coefficients that are already implemented in the library.","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"Finally, as discussed in the documentation, the general expression of a dynamics can be simplified depending on the noise type.","category":"page"},{"location":"pages/t001_dynamics/#Setup","page":"1 Dynamics","title":"Setup","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"The first step is to load the pertinent library for the tutorial:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"using UniversalDynamics","category":"page"},{"location":"pages/t001_dynamics/#System-Dynamics","page":"1 Dynamics","title":"System Dynamics","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"A System of Stochastic Differential Equations with arbitrary coefficients is declared by its initial condition or state, initial time, noise type and noise correlations. For example, a three dimensional system with scalar noise is given using:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"x0 = rand(3)\nx = SystemDynamics(x0; noise=ScalarNoise())","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"3-dimensional system dynamics with 1-dimensional NonDiagonalNoise\n state:           [0.610651, 0.066719, 0.0838966]\n in-place?        true\n dimension:       3\n noise dimension: 1\n diagonal noise?  false","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"Notice that since x0 isa Vector, the system is defined in its in-place form. Otherwise, if we would like to work with the out of place version, x0 must be defined as a SVector.","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"On the other hand, diagonal noise is the default noise type, for example:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"y0 = rand(2)\ny = SystemDynamics(y0)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"2-dimensional system dynamics with 2-dimensional DiagonalNoise\n state:           [0.078514, 0.0830668]\n in-place?        true\n dimension:       2\n noise dimension: 2\n diagonal noise?  true","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"Lastly, the non-diagonal noise case with correlated noises can be given using:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"z0 = rand(1)\nρ = [exp(abs(i - j) / 2 * log(0.663)) for i in 1:3, j in 1:3]\nz = SystemDynamics(z0; noise=NonDiagonalNoise(3), ρ=ρ)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"1-dimensional system dynamics with 3-dimensional NonDiagonalNoise\n state:           [0.363908]\n in-place?        true\n dimension:       1\n noise dimension: 3\n diagonal noise?  false","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"Notice that coefficients for these kind of dynamics haven't been described yet. They are provided in a further step, only if needed. This will become more clear after reading the following sections.","category":"page"},{"location":"pages/t001_dynamics/#Model-Dynamics","page":"1 Dynamics","title":"Model Dynamics","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"A Model Dynamics refers to Stochastic Differential Equations that are known and fairly common in finance, such that it is worth having their coefficients implemented in the library. In this case, we need to provide additional parameters for the coefficients. For example, the well known One-Factor Vasicek model can be given as a One-Factor Affine Short Rate Model (checkout the documentation for further details) with some assumptions, namely:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"κ, θ and Σ as time independent parameters,\nα = 1 and β = 0,\nxi_0 = 0 and xi_1 = 1.","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"r0 = rand(1)\nκ(t) = 0.4363\nθ(t) = 0.0613\nΣ(t) = 0.1491\nα(t) = one(t)\nβ(t) = zero(t)\nr = OneFactorAffineModelDynamics(r0, κ, θ, Σ, α, β)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"1-dimensional One-Factor Affine Short Rate model dynamics\n state:           [0.61105]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"As already mentioned, coefficients for these kind of dynamics are already implemented in the library. It is possible to access to them by calling either the drift or difussion functions on their in-place or out-of-place versions, which are dispatched depending on the parameters type. For example, for the in-place version we need to call coefficient!(du, u, p, t), such that:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"du = similar(get_state(r))\nu = get_state(r)\np = get_parameters(r)\nt = get_t0(r)\n\ndrift!(du, u, p, t)\ndu","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"1-element Array{Float64,1}:\n -0.23985598634446742","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"du = similar(get_noise_rate_prototype(r))\ndiffusion!(du, u, p, t)\ndu","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"1-element Array{Float64,1}:\n 0.1491","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"One might wonder why do we need to implement model coefficients in the library. For this particular example, implementing fast coefficients is easy. However, for Multi-Factor models or other models, computations get more complicated and it is useful to aid the user with fast and traceble functions.","category":"page"},{"location":"pages/t001_dynamics/#Dynamical-Systems","page":"1 Dynamics","title":"Dynamical Systems","text":"","category":"section"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"Once we have defined different dynamics, we can group them in a unique system by declaring a dynamical system (checkout the documentation for further details):","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"dynamics = [:x => x, :y => y, :z => z, :r => r]\nds = DynamicalSystem(dynamics)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"7-dimensional dynamical system with 7-dimensional NonDiagonalNoise\n state:           [0.610651, 0.066719, 0.0838966, …, 0.363908, 0.61105]\n in-place?        true\n dimension:       7\n noise dimension: 7\n diagonal noise?  false","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"A dynamical system has relevant information, such as its state:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"get_state(ds)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"7-element Array{Float64,1}:\n 0.6106511565299471\n 0.06671902367092164\n 0.08389655098823834\n 0.07851404177628019\n 0.08306675602603031\n 0.36390844510267106\n 0.6110501406015756","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"the initial time:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"get_t0(ds)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"0.0","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"the correlations between noises:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"get_cor(ds)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"7×7 Array{Float64,2}:\n 1.0  0.0  0.0  0.0       0.0       0.0       0.0\n 0.0  1.0  0.0  0.0       0.0       0.0       0.0\n 0.0  0.0  1.0  0.0       0.0       0.0       0.0\n 0.0  0.0  0.0  1.0       0.814248  0.663     0.0\n 0.0  0.0  0.0  0.814248  1.0       0.814248  0.0\n 0.0  0.0  0.0  0.663     0.814248  1.0       0.0\n 0.0  0.0  0.0  0.0       0.0       0.0       1.0","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"and the noise rate prototype, which represents, in this case, the prototype for du that the difussion function modifies in-place:","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"get_noise_rate_prototype(ds)","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"7×7 Array{Float64,2}:\n 1.0  0.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0  0.0\n 1.0  0.0  0.0  0.0  0.0  0.0  0.0\n 0.0  1.0  0.0  0.0  0.0  0.0  0.0\n 0.0  0.0  1.0  0.0  0.0  0.0  0.0\n 0.0  0.0  0.0  1.0  1.0  1.0  0.0\n 0.0  0.0  0.0  0.0  0.0  0.0  1.0","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"","category":"page"},{"location":"pages/t001_dynamics/","page":"1 Dynamics","title":"1 Dynamics","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/simulation.jl\"","category":"page"},{"location":"pages/t004_simulation/#Tutorial-4:-Simulation","page":"4 Simulation","title":"Tutorial 4: Simulation","text":"","category":"section"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"How to simulate, i.e. numerically solve, dynamical systems.","category":"page"},{"location":"pages/t004_simulation/#Introduction","page":"4 Simulation","title":"Introduction","text":"","category":"section"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"In the previous tutorials we have learned how to declare dynamical systems and briefly shown how to solve them using a numerical scheme. Now we focus on Monte Carlo simulations, i.e. solving the SDEs for many trajectories.","category":"page"},{"location":"pages/t004_simulation/#Setup","page":"4 Simulation","title":"Setup","text":"","category":"section"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"using UniversalDynamics\nusing UnPack\nusing Plots","category":"page"},{"location":"pages/t004_simulation/#Simulation","page":"4 Simulation","title":"Simulation","text":"","category":"section"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"We need a dynamical system first. The most simple case is probably the BSM model, which has been already described and used in previous tutorials:","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"S0 = @SVector rand(1)\nS = SystemDynamics(S0)\n\nfunction f(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack risk-free rate parameter\n    @unpack r = p\n\n    S = remake(_S_, u, t)\n\n    dS = r * S(t)\n\n    return SVector{1}(dS)\nend\n\nfunction g(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack volatility parameter\n    @unpack σ = p\n\n    S = remake(_S_, u, t)\n\n    dS = σ * S(t)\n\n    return SVector{1}(dS)\nend\n\ndynamics = [:S => S]\nparams = (r = 0.05, σ = 0.1)\nds = DynamicalSystem(f, g, dynamics, params)","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"1-dimensional dynamical system with 1-dimensional DiagonalNoise\n state:           [0.878319]\n in-place?        false\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"Now we can simulate for any number of trayectories:","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"# the number of trajectories\nN = 10\nsol = montecarlo(ds, 1., N; seed=1)\nplot(sol)","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"(Image: )","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"We can also change both the default Monte Carlo scheme and the ensemble algorithm:","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"sol = montecarlo(\n    ds, 1., N;\n    alg=UniversalDynamics.EM(), dt=0.01, ensemblealg=UniversalDynamics.EnsembleSerial(), seed=1\n)\nplot(sol)","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"(Image: )","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"","category":"page"},{"location":"pages/t004_simulation/","page":"4 Simulation","title":"4 Simulation","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/oop_coefficients.jl\"","category":"page"},{"location":"pages/t003_oop_coefficients/#Tutorial-3:-Coefficients-(out-of-place)","page":"3 Coefficients (out of place)","title":"Tutorial 3: Coefficients (out of place)","text":"","category":"section"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"How to declare out-of-place coefficients for dynamical systems.","category":"page"},{"location":"pages/t003_oop_coefficients/#Introduction","page":"3 Coefficients (out of place)","title":"Introduction","text":"","category":"section"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"In the previous tutorial we have learned how to declare in-place coefficients. We now focus on the out-of-place case.","category":"page"},{"location":"pages/t003_oop_coefficients/#Setup","page":"3 Coefficients (out of place)","title":"Setup","text":"","category":"section"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"using UniversalDynamics\nusing UnPack\nusing Plots","category":"page"},{"location":"pages/t003_oop_coefficients/#Out-of-place-coefficients","page":"3 Coefficients (out of place)","title":"Out of place coefficients","text":"","category":"section"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"We will implement the same problem as in the previous tutorial with in-place coefficients:","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"S0 = @SVector rand(1)\nS = SystemDynamics(S0)\n\ninclude(\"assets/DaiSingletonParameters_A3_1.jl\")\nconst υ₀, θ₀, r₀, μ, ν, κ_rυ, κ, ῡ, θ̄, η, σ_θυ, σ_θr, σ_rυ, σ_rθ, ζ, α_r, β_θ = DaiSingletonParameters()","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"(0.008389999999999998, 1.069970971985938, 2.082652261993877, 0.366, 0.228, 0.0348, 18.0, 0.0158, 0.0827, 0.09159694318043589, 0.0212, -0.0886, 4.2, -3.77, 0.014422205101855956, 3.26e-14, 7.9e-10)","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"Define all Short Rate model parameters, taking into account OOP coefficients and parameters:","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"x0 = @SVector [υ₀, θ₀, r₀]\n\nξ₀(t) = zero(t) # ξ₀ = zero\nξ₁(t) = @SVector [0, 0, 1]\n\nϰ(t) = @SMatrix([\n    μ     0 0\n    0     ν 0\n    κ_rυ -κ κ\n])\nθ(t) = @SVector [ῡ, θ̄, θ̄ ]\nΣ(t) = @SMatrix [\n    η           0    0\n    η * σ_θυ    1 σ_θr\n    η * σ_rυ σ_rθ    1\n]\n\nα(t) = @SVector [0, ζ^2, α_r]\nβ(t) = @SMatrix [\n    1   0 0\n    β_θ 0 0\n    1   0 0\n]\n\nx = MultiFactorAffineModelDynamics(x0, ϰ, θ, Σ, α, β, ξ₀, ξ₁; noise=NonDiagonalNoise(3))","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"3-dimensional Multi-Factor Affine Short Rate model dynamics\n state:           [0.00839, 1.06997, 2.08265]\n in-place?        false\n dimension:       3\n noise dimension: 3\n diagonal noise?  false","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"B = SystemDynamics(one(eltype(x)))","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           1.0\n in-place?        false\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"Now, let's construct the OOP drift f and diffusion g coefficients for this scenario:","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"function f(u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _x = _dynamics\n    @unpack _S_, _x_, _B_ = _securities_\n\n    S = remake(_S_, u, t)\n    x = remake(_x_, u, t)\n    B = remake(_B_, u, t)\n\n    IR = FixedIncomeSecurities(_x, x, B)\n\n    dS = IR.r(t) * S(t)\n    dx = drift(x(t), get_parameters(_x), t)\n    dB = IR.r(t) * B(t)\n\n    return vcat(dS, dx, dB)\nend\n\nfunction g(u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _x = _dynamics\n    @unpack _S_, _x_, _B_ = _securities_\n    @unpack σ = p\n\n    S = remake(_S_, u, t)\n    x = remake(_x_, u, t)\n    B = remake(_B_, u, t)\n\n    dS = σ * S(t)\n    dx = diffusion(x(t), get_parameters(_x), t)\n    dB = zero(eltype(u))\n\n    return @SMatrix [dS       0       0       0  0\n                      0 dx[1,1] dx[1,2] dx[1,3]  0\n                      0 dx[2,1] dx[2,2] dx[2,3]  0\n                      0 dx[3,1] dx[3,2] dx[3,3]  0\n                      0       0       0       0 dB]\nend\n\ndynamics = [:S => S, :x => x, :B => B]\nds = DynamicalSystem(f, g, dynamics, (σ = 0.1, ))","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"5-dimensional dynamical system with 5-dimensional NonDiagonalNoise\n state:           [0.598847, 0.00839, 1.06997, 2.08265, 1.0]\n in-place?        false\n dimension:       5\n noise dimension: 5\n diagonal noise?  false","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"sol = solve(ds, 1.; alg=UniversalDynamics.EM(), seed=1, dt=0.01);\nplot(sol, vars=1, label=\"S(t)\")","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"(Image: )","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"plot(sol, vars=2:4, label=[\"x₁(t)\" \"x₂(t)\" \"x₃(t)\"])","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"(Image: )","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"plot(sol, vars=5, label=\"B(t)\")","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"(Image: )","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"","category":"page"},{"location":"pages/t003_oop_coefficients/","page":"3 Coefficients (out of place)","title":"3 Coefficients (out of place)","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/european.jl\"","category":"page"},{"location":"pages/t005_european/#Tutorial-5:-European-Option","page":"5 European Option","title":"Tutorial 5: European Option","text":"","category":"section"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"How to price European style derivatives using a Monte Carlo expected value estimate.","category":"page"},{"location":"pages/t005_european/#Introduction","page":"5 European Option","title":"Introduction","text":"","category":"section"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"Recall that the price of a European style derivative with time T payout V(T) is given by the expectation under an equivalent martingale measure. Specifically, given a deflator or numeraire N and assuming the existence of a equivalent martingale measure Q^N induced by N, we have:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"V(t) = N(t) cdot E_t^Q_N left fracV(T)N(T) right","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"The Monte Carlo method provides a numerical technique to compute the expectation of a random variable. In that context, we can proceed with the pricing of a given product once we have our simulations for the processes or dynamics that are involved and using the Strong Law of Large Numbers.","category":"page"},{"location":"pages/t005_european/#Setup","page":"5 European Option","title":"Setup","text":"","category":"section"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"using UniversalPricing\nusing UnPack","category":"page"},{"location":"pages/t005_european/#Pricing","page":"5 European Option","title":"Pricing","text":"","category":"section"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"Consider the same dividend-free stock S with Black-Scholes-Merton dynamics under the risk-neutral measure that we have already discussed in previous tutorials:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"S0 = @SVector ones(1)\nS = SystemDynamics(S0)\n\nfunction f(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack risk-free rate parameter\n    @unpack r = p\n\n    S = remake(_S_, u, t)\n\n    dS = r * S(t)\n\n    return SVector{1}(dS)\nend\n\nfunction g(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack volatility parameter\n    @unpack σ = p\n\n    S = remake(_S_, u, t)\n\n    dS = σ * S(t)\n\n    return SVector{1}(dS)\nend\n\ndynamics = [:S => S]\nparams = (r = 0.05, σ = 0.1)\nds = DynamicalSystem(f, g, dynamics, params)\nsol = montecarlo(ds, 1., 10_000; seed=1);\nnothing #hide","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"The payoff for a vanilla call option with strike K and maturity T is given by:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"V(T) = max left( S(T) - K 0 right)","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"Using the money market account B(t) as numeraire, we have:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"V(0) = B(0) cdot E_t^Q left fracV(T)B(T) right = E_t^Q left D(0 T) cdot V(T) right","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"with D(t T) the discount factor, which in the simple flat rate model is given by:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"D(t T) = exp left( -r cdot (T - t) right)","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"In order to price such derivative, we first need to declare a function that computes the discounted payoff given the simulations and a set of parameters:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"function discounted_payoff(sol, p)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack strike and maturity parameters\n    @unpack r, K, T = p\n\n    S = remake(_S_, sol)\n\n    return exp(-r * (T - 0)) * max(S(T) - K, 0)\nend;\nnothing #hide","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"We can now compute the expectation that yields to the fair price of the option:","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"params = (ds.params..., T = 1., K = 1.)\nprice = 𝔼(discounted_payoff, sol, params)","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"Expected value estimate by Monte Carlo method:\n mean: 0.06673970161639155\n stdv: 0.0007665880562645497","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"","category":"page"},{"location":"pages/t005_european/","page":"5 European Option","title":"5 European Option","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/short_rate_model.jl\"","category":"page"},{"location":"pages/t007_short_rate_model/#Tutorial-7:-Short-Rate-Model","page":"7 Short Rate Model","title":"Tutorial 7: Short Rate Model","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"How to declare Short Rate Model dynamics correctly.","category":"page"},{"location":"pages/t007_short_rate_model/#Introduction","page":"7 Short Rate Model","title":"Introduction","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"We have already presented some short rate models in previous tutorials. In this tutorial we show more details but the general aspects have been already presented.","category":"page"},{"location":"pages/t007_short_rate_model/#Setup","page":"7 Short Rate Model","title":"Setup","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"using UniversalDynamics\nusing UniversalPricing\nusing UnPack","category":"page"},{"location":"pages/t007_short_rate_model/#One-Factor-Affine-Short-Rate-Model","page":"7 Short Rate Model","title":"One-Factor Affine Short Rate Model","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The detailed documentation for such model is presented here. As you might see, this model involves practically all the most used models in practice, such as Vasicek, Cox-Ingersoll-Ross, Hull-White and Gaussian Short Rate (GSR). For example, the Vasicek model can be declared as:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"r0 = rand(1)\nκ(t) = 0.4363\nθ(t) = 0.0613\nΣ(t) = 0.1491\nα(t) = one(t)\nβ(t) = zero(t)\nr = OneFactorAffineModelDynamics(r0, κ, θ, Σ, α, β)","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"1-dimensional One-Factor Affine Short Rate model dynamics\n state:           [0.375071]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The fact that κ, θ and Σ are time independent parameters, α = 1, β = 0, xi_0 = 0 and xi_1 = 1 makes the One-Factor Affine model collapse to a Vasicek short rate model.","category":"page"},{"location":"pages/t007_short_rate_model/#Multi-Factor-Affine-Short-Rate-Model","page":"7 Short Rate Model","title":"Multi-Factor Affine Short Rate Model","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The detailed documentation for such model is presented here. It can be seen that this model generalizes the One-Factor case in a beautiful way. The only task left to the user is to define parameters. Take into account that those parameters have to be declared differently depending if we want to work with an in-place or out-of-place model version. This is because we want to avoid allocations. For example, the in-place version of a function that returns a matrix might be:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"function ϰ!(u, t)\n    u[1,1] = μ\n    u[2,2] = ν\n    u[3,1] = κ_rυ\n    u[3,2] = -κ\n    u[3,3] = κ\n    return nothing\nend","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"ϰ! (generic function with 1 method)","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"while its out-of-place version:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"function ϰ(t)\n    return @SMatrix [\n        μ     0 0\n        0     ν 0\n        κ_rυ -κ κ\n    ]\nend","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"ϰ (generic function with 1 method)","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"with known constants μ, ν, κ_rυ and κ.","category":"page"},{"location":"pages/t007_short_rate_model/#One-Factor-Quadratic-Short-Rate-Model","page":"7 Short Rate Model","title":"One-Factor Quadratic Short Rate Model","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The detailed documentation for such model is presented here.","category":"page"},{"location":"pages/t007_short_rate_model/#Multi-Factor-Quadratic-Short-Rate-Model","page":"7 Short Rate Model","title":"Multi-Factor Quadratic Short Rate Model","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The detailed documentation for such model is presented here. Note that the same considerations regarding in or out-of place coefficients applies for this short rate model.","category":"page"},{"location":"pages/t007_short_rate_model/#Money-Market-Account","page":"7 Short Rate Model","title":"Money Market Account","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"The current implementation of Short Rate models requires the declaration of the money market account as a separate process or dynamics. This is because we are insterested in solving its differential equation in the integrator, jointly with the short rate dynamics. In this context, if you are interested in using the money market account you must declare its dynamics:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"# money market account dynamics (IIP case)\nB = SystemDynamics([1.])","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           [1.0]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"and include it in the dynamics container for the DynamicalSystem.","category":"page"},{"location":"pages/t007_short_rate_model/#Basic-Fixed-Income-Securities","page":"7 Short Rate Model","title":"Basic Fixed Income Securities","text":"","category":"section"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"Interest rate models allows us to define all the basic fixed income securities. For the Short Rate Model, we can declare these objects simply using FixedIncomeSecurities inside any coefficient or payoff function, for example, for t  T  S:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"function test_coefficient_fis(du, u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _r = _dynamics\n    @unpack _r_, _B_ = _securities_\n\n    T = 0.5\n    S = 1.0\n\n    r = remake(_r_, du, u, t)\n    B = remake(_B_, du, u, t)\n\n    IR = FixedIncomeSecurities(_r, r, B)\n\n    ps = 22\n    println(rpad(\"Spot rate: \", ps), IR.r(t))\n    println(rpad(\"Money market account: \", ps), IR.B(t))\n    println(rpad(\"Discount bond: \", ps), IR.P(t, T))\n    println(rpad(\"Simple forward rate: \", ps), IR.L(t, T, S))\nend\n\ndynamics = [:r => r, :B => B]\nds = DynamicalSystem(dynamics)\ndu = similar(get_state(ds))\nu = get_state(ds)\np = get_parameters(ds)\nt = get_t0(ds)\n\ntest_coefficient_fis(du, u, p, t)","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"Spot rate:            0.3750710030569919\nMoney market account: 1.0\nRunning\nDiscount bond:        0.8426462504730345\nRunning\nSimple forward rate:  0.3043823188358301\n","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"For this dummy coefficient function we have been able to compute some basic fixed income securities that only needed information at the current time t. On the other hand, computing the discount factor D(t T) requires information at time T in the future, i.e. B(T). This implies that discount factors cannot be used in coefficient functions. However, they can be used in payoff function because in those cases we already have simulations up to time T or further, for example:","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"function f!(du, u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _r = _dynamics\n    @unpack _r_, _B_ = _securities_\n\n    r = remake(_r_, du, u, t)\n    B = remake(_B_, du, u, t)\n\n    IR = FixedIncomeSecurities(_r, r, B)\n\n    drift!(r.dx, r(t), get_parameters(_r), t)\n    B.dx[] = IR.r(t) * B(t)\n\n    return nothing\nend\n\nfunction g!(du, u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _r = _dynamics\n    @unpack _r_, _B_ = _securities_\n\n    r = remake(_r_, du, u, t)\n    B = remake(_B_, du, u, t)\n\n    IR = FixedIncomeSecurities(_r, r, B)\n\n    diffusion!(r.dx, r(t), get_parameters(_r), t)\n    B.dx[] = zero(eltype(u))\n\n    return nothing\nend\n\nds = DynamicalSystem(f!, g!, dynamics, nothing)\nsol = solve(ds, 1., alg=UniversalDynamics.EM(), dt=0.01, seed=1)\n\nfunction test_payoff_fis(sol, p)\n    @unpack _dynamics, _securities_ = p\n    @unpack _r = _dynamics\n    @unpack _r_, _B_ = _securities_\n\n    T = 0.5\n    S = 1.0\n\n    r = remake(_r_, sol)\n    B = remake(_B_, sol)\n\n    IR = FixedIncomeSecurities(_r, r, B)\n\n    ps = 22\n    println(rpad(\"Spot rate: \", ps), IR.r(t))\n    println(rpad(\"Money market account: \", ps), IR.B(t))\n    println(rpad(\"Discount factor: \", ps), IR.D(t, T))\n    println(rpad(\"Discount bond: \", ps), IR.P(t, T))\n    println(rpad(\"Simple forward rate: \", ps), IR.L(t, T, S))\n    println(rpad(\"Libor rate: \", ps), IR.L(T, S))\nend\n\ntest_payoff_fis(sol, p)","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"Spot rate:            0.3750710030569919\nMoney market account: 1.0\nDiscount factor:      0.8181883625135752\nDiscount bond:        0.8426462504730345\nSimple forward rate:  0.3043823188358301\nLibor rate:           0.3012147128924685\n","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"","category":"page"},{"location":"pages/t007_short_rate_model/","page":"7 Short Rate Model","title":"7 Short Rate Model","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/american.jl\"","category":"page"},{"location":"pages/t006_american/#Tutorial-6:-American-Option","page":"6 American Option","title":"Tutorial 6: American Option","text":"","category":"section"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"How to price American/Bermudan style derivatives using a Monte Carlo expected value estimate through the Longstaff-Schwartz method.","category":"page"},{"location":"pages/t006_american/#Introduction","page":"6 American Option","title":"Introduction","text":"","category":"section"},{"location":"pages/t006_american/#Setup","page":"6 American Option","title":"Setup","text":"","category":"section"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"using UniversalPricing\nusing UnPack","category":"page"},{"location":"pages/t006_american/#Pricing","page":"6 American Option","title":"Pricing","text":"","category":"section"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"Consider the same dividend-free stock S with Black-Scholes-Merton dynamics under the risk-neutral measure that we have already discussed in previous tutorials:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"S0 = SVector{1}(36.)\nS = SystemDynamics(S0)\n\nfunction f(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack risk-free rate parameter\n    @unpack r = p\n\n    S = remake(_S_, u, t)\n\n    dS = r * S(t)\n\n    return SVector{1}(dS)\nend\n\nfunction g(u, p, t)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack volatility parameter\n    @unpack σ = p\n\n    S = remake(_S_, u, t)\n\n    dS = σ * S(t)\n\n    return SVector{1}(dS)\nend\n\nT = 1.\nΔt = 1/50\ndynamics = [:S => S]\nparams = (r = 0.06, σ = 0.2)\nds = DynamicalSystem(f, g, dynamics, params)\nsol = montecarlo(ds, T, 10_000; alg=UniversalDynamics.EM(), dt=Δt, seed=1);\nnothing #hide","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The Longstaff Schwartz algorithm expects, for any type of american/bermudan style derivative, the following arguments:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"the excercise value , i.e. a function that computes the net payment seen by the option holder at each excercise date,\na function for discounting between excercise dates,\nthe regressors for the hold value fitting, and\nthe set of excercise dates.","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The excercise value at each excercise time t for an american put option with strike K is given by:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"U(t) = max left( K - S(t) 0 right)","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The excercise value is provided as a function:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"function U(u, p, t, Tenors=nothing, n=nothing)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n\n    # unpack strike parameter\n    @unpack r, K = p\n\n    S = remake(_S_, u)\n\n    return max(K - S(t), 0)\nend;\nnothing #hide","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The excercise value function reads as follows: compute the excercise value given the simulation value u at excercise time t with the aid of parameters p. The other arguments, Tenors and n are optional and refer to t = Tenors[n], where Tenors is the array containing all the excercise dates and 0 and n the index in such array. For some products it is useful to have such information, as we will see for Callable Libor Exotics.","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"If we decide to work with the spot measure Q^B, the discount factor is used for discounting. In this particular case, we assume a flat rate model as interest rate model:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"function D(u, p, t, T, Tenors=nothing, n=nothing, n′=nothing)\n    # unpack risk-free interest rate parameter\n    @unpack r = p\n    return exp(-r * (T - t))\nend;\nnothing #hide","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"Note that this function has an additional argument, n′, such that T = Tenors[n′].","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"We now have to define the regressors for each early excercise date. For this particular case we use the stock price as regressor:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"function R(u, p, t, Tenors=nothing, n=nothing)\n    @unpack _securities_ = p\n    @unpack _S_ = _securities_\n    S = remake(_S_, u)\n    return S(t)\nend;\nnothing #hide","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"The excercise dates can be provided as a Tenor structure, where all dates must be sorted and include 0 or as a τ structure, where we must only provide the Δt_i between each early excercise date:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"τ = fill(Δt, Int(T/Δt));\nnothing #hide","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"We can now compute the expectation that yields to the fair price of the callable option:","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"params = (ds.params..., K = 40.)\nprice = callable_product_valuation(sol, params, U, D, R, τ=τ)","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"Expected value estimate by Monte Carlo method:\n mean: 4.479941725472968\n stdv: 0.029522021685899746","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"","category":"page"},{"location":"pages/t006_american/","page":"6 American Option","title":"6 American Option","text":"This page was generated using Literate.jl.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/iip_coefficients.jl\"","category":"page"},{"location":"pages/t002_iip_coefficients/#Tutorial-2:-Coefficients-(in-place)","page":"2 Coefficients (in place)","title":"Tutorial 2: Coefficients (in place)","text":"","category":"section"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"How to declare in-place coefficients for dynamical systems.","category":"page"},{"location":"pages/t002_iip_coefficients/#Introduction","page":"2 Coefficients (in place)","title":"Introduction","text":"","category":"section"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"In the previous tutorial we have learned how to declare system dynamics as well as model dynamics individually. Next, we constructed a dynamical system by using a collection of dynamics but without considering coefficients. Now we would like to focus in the construction of the coefficients that will allows us to define a dynamical system that can be solved by applying a discretization scheme.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"First we must realize that there are two types of coefficients: in-place (IIP) and out-of-place (OOP). An in-place function for a coefficient modifies an array in place by receiving its pointer as argument. An out-of-place function for a coefficient returns statically sized arrays. Depending on the size of the problem, one approach is better than the other. In this tutorial we will focus in the in-place case. Checkout the next tutorial for the out-of-place case.","category":"page"},{"location":"pages/t002_iip_coefficients/#Setup","page":"2 Coefficients (in place)","title":"Setup","text":"","category":"section"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"The first step is to load the pertinent libraries for the tutorial:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"using UniversalDynamics\nusing UnPack\nusing Plots","category":"page"},{"location":"pages/t002_iip_coefficients/#In-place-coefficients","page":"2 Coefficients (in place)","title":"In place coefficients","text":"","category":"section"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Consider a stock S following the Black-Scholes-Merton model (BSM). Under the risk-neutral measure Q, the stock process follows:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"dS(t) = r cdot S(t) cdot dt + σ cdot S(t) cdot dW^Q(t) quad S(0) = S₀","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"with risk-free interest rate r and volatility σ. Let's define this dynamics using what we already know from the previous tutorial:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"S0 = rand(1)\nS = SystemDynamics(S0)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           [0.00629341]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"The IIP drift f! and diffusion g! coefficients are given by:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"function f!(du, u, p, t)\n    # unpack risk-free rate parameter\n    @unpack r = p\n\n    # modify du in-place using current stock state S(t) = u[1]\n    du[1] = r * u[1]\n\n    return nothing\nend\n\nfunction g!(du, u, p, t)\n    # unpack volatility parameter\n    @unpack σ = p\n\n    # modify du in-place using current stock state S(t) = u[1]\n    du[1] = σ * u[1]\n\n    return nothing\nend;\nnothing #hide","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Now we are ready to declare a dynamical system with coefficients, dynamics and parameters:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"dynamics = [:S => S]\nparams = (r = 0.05, σ = 0.1)\nds = DynamicalSystem(f!, g!, dynamics, params)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"1-dimensional dynamical system with 1-dimensional DiagonalNoise\n state:           [0.00629341]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"We can now apply a numerical scheme to solve the SDE. For example, the fixed time step, strong order 0.5 for all kind of noises, Euler-Maruyama scheme:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"sol = solve(ds, 1.; alg=UniversalDynamics.EM(), seed=1, dt=0.01)\nplot(sol)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Or an adaptive time step, strong order 1.5 and weak order 2.0 for diagonal and scalar noise:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"sol = solve(ds, 1.; alg=UniversalDynamics.SRIW1(), seed=1)\nplot(sol)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Let's spice up the example and consider stochastic interest rates given by a Multi-Factor Affine Short Rate model. This will allow us to use some additional features that comes in handy for building the coefficients.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"The Multi-Factor Short Rate model that we will refer to is decribed in [1] as AM₁(3) in its Ar representation and its given by a System of SDEs described in the documentation. Our library allows us to describe such complex model fairly easy, requiring only the definition of some constants and functions.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Start by loading some parameters values for the Short Rate Model:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"# load some parameters\ninclude(\"assets/DaiSingletonParameters_A3_1.jl\")\n(υ₀, θ₀, r₀, μ, ν, κ_rυ, κ, ῡ, θ̄, η, σ_θυ, σ_θr, σ_rυ, σ_rθ, ζ, α_r, β_θ) = DaiSingletonParameters()","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(0.008389999999999998, 1.069970971985938, 2.082652261993877, 0.366, 0.228, 0.0348, 18.0, 0.0158, 0.0827, 0.09159694318043589, 0.0212, -0.0886, 4.2, -3.77, 0.014422205101855956, 3.26e-14, 7.9e-10)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Define all Short Rate model parameters, taking into account IIP parameter functions:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"x0 = [υ₀, θ₀, r₀]\n\nξ₀!(t) = zero(t)\n\nfunction ξ₁!(u, t)\n    u[1] = 0\n    u[2] = 0\n    u[3] = 1\n    return nothing\nend\n\nfunction ϰ!(u, t)\n    u[1,1] = μ\n    u[2,2] = ν\n    u[3,1] = κ_rυ\n    u[3,2] = -κ\n    u[3,3] = κ\n    return nothing\nend\n\nfunction θ!(u, t)\n    u[1] = ῡ\n    u[2] = θ̄\n    u[3] = θ̄\n    return nothing\nend\n\nfunction Σ!(u, t)\n    u[1,1] = η\n    u[2,1] = η * σ_θυ\n    u[2,2] = 1\n    u[2,3] = σ_θr\n    u[3,1] = η * σ_rυ\n    u[3,2] = σ_rθ\n    u[3,3] = 1\n    return nothing\nend\n\nfunction α!(u, t)\n    u[1] = 0\n    u[2] = ζ^2\n    u[3] = α_r\n    return nothing\nend\n\nfunction β!(u, t)\n    u[1,1] = 1\n    u[2,1] = β_θ\n    u[3,1] = 1\n    return nothing\nend\n\nx = MultiFactorAffineModelDynamics(x0, ϰ!, θ!, Σ!, α!, β!, ξ₀!, ξ₁!; noise=NonDiagonalNoise(3))","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"3-dimensional Multi-Factor Affine Short Rate model dynamics\n state:           [0.00839, 1.06997, 2.08265]\n in-place?        true\n dimension:       3\n noise dimension: 3\n diagonal noise?  false","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"We will also solve the Money Market Account B(t) differential equation for the short model with the integrator, so we have to define its dynamics:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"B = SystemDynamics(ones(eltype(x), 1))","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           [1.0]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"As always, before declaring the dynamical system, define a dynamics container:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"dynamics = [:S => S, :x => x, :B => B]","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"3-element Array{Pair{Symbol,UniversalDynamics.AbstractDynamics{true,Dim,NoiseDim,DiagNoise,Float64} where DiagNoise where NoiseDim where Dim},1}:\n :S => 1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           [0.00629341]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true\n :x => 3-dimensional Multi-Factor Affine Short Rate model dynamics\n state:           [0.00839, 1.06997, 2.08265]\n in-place?        true\n dimension:       3\n noise dimension: 3\n diagonal noise?  false\n :B => 1-dimensional system dynamics with 1-dimensional DiagonalNoise\n state:           [1.0]\n in-place?        true\n dimension:       1\n noise dimension: 1\n diagonal noise?  true","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Now, let's construct the IIP drift f! and diffusion g! coefficients for this new scenario.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"function f!(du, u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _x = _dynamics\n    @unpack _S_, _x_, _B_ = _securities_\n\n    S = remake(_S_, du, u, t)\n    x = remake(_x_, du, u, t)\n    B = remake(_B_, du, u, t)\n\n    IR = FixedIncomeSecurities(_x, x, B)\n\n    S.dx[] = IR.r(t) * S(t)\n    drift!(x.dx, x(t), get_parameters(_x), t)\n    B.dx[] = IR.r(t) * IR.B(t)\n\n    return nothing\nend\n\nfunction g!(du, u, p, t)\n    @unpack _dynamics, _securities_ = p\n    @unpack _x = _dynamics\n    @unpack _S_, _x_, _B_ = _securities_\n    @unpack σ = p\n\n    S = remake(_S_, du, u, t)\n    x = remake(_x_, du, u, t)\n    B = remake(_B_, du, u, t)\n\n    S.dx[] = σ * S(t)\n    diffusion!(x.dx, x(t), get_parameters(_x), t)\n    B.dx[] = zero(eltype(u))\n\n    return nothing\nend;\nnothing #hide","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"There are many things that are worth to be explained for the coefficients functions:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"_dynamics is a special variable containing all the dynamics,\n_securities_ is a special variable containing one security for each dynamics (why securities are useful will become clearer later),\ndynamics names are preceded by an underscore for each dynamics,\nsecurities names are preceded and followed by an underscore for each dynamics,\nFixedIncomeSecurities constructs all the basic fixed income securities for the pertinent interest rate model, for example the discount factor, zero coupon bond, simple forward rate, spot or Libor rate, etc.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Consider building the diffusion coefficient function without using securities:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"function g_tedious!(du, u, p, t)\n    @unpack _dynamics = p\n    @unpack _x = _dynamics\n    @unpack σ = p\n\n    S = view(u, 1:1)\n    x = view(u, 2:4)\n    B = view(u, 5:5)\n\n    dS = view(du, 1:1, 1:1)\n    dx = view(du, 2:4, 2:4)\n    dB = view(du, 5:5, 5:5)\n\n    dS[] = σ * S[]\n    diffusion!(dx, x, get_parameters(_x), t)\n    dB[] = zero(eltype(u))\n\n    return nothing\nend;\nnothing #hide","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"Having securities + remake allows us to avoid thinking about indexes and views.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"We can now proceed with the numerical solution:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"ds = DynamicalSystem(f!, g!, dynamics, params)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"5-dimensional dynamical system with 5-dimensional NonDiagonalNoise\n state:           [0.00629341, 0.00839, 1.06997, 2.08265, 1.0]\n in-place?        true\n dimension:       5\n noise dimension: 5\n diagonal noise?  false","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"sol = solve(ds, 1.; alg=UniversalDynamics.EM(), seed=1, dt=0.01);\nplot(sol, vars=1, label=\"S(t)\")","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"plot(sol, vars=2:4, label=[\"x₁(t)\" \"x₂(t)\" \"x₃(t)\"])","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"plot(sol, vars=5, label=\"B(t)\")","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"(Image: )","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"A final useful tip or remark is that declaring a dynamical system without coefficients allows to check the noise_rate_prototype attribute, which helps undestanding what we must build in the diffusion coefficient:","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"ds = DynamicalSystem(dynamics)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"5-dimensional dynamical system with 5-dimensional NonDiagonalNoise\n state:           [0.00629341, 0.00839, 1.06997, 2.08265, 1.0]\n in-place?        true\n dimension:       5\n noise dimension: 5\n diagonal noise?  false","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"get_noise_rate_prototype(ds)","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"5×5 Array{Float64,2}:\n 1.0  0.0  0.0  0.0  0.0\n 0.0  1.0  1.0  1.0  0.0\n 0.0  1.0  1.0  1.0  0.0\n 0.0  1.0  1.0  1.0  0.0\n 0.0  0.0  0.0  0.0  1.0","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"[1] Dai, Q. and Singleton, K.J. (2000), Specification Analysis of Affine Term Structure Models.","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"","category":"page"},{"location":"pages/t002_iip_coefficients/","page":"2 Coefficients (in place)","title":"2 Coefficients (in place)","text":"This page was generated using Literate.jl.","category":"page"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Welcome to the tutorial pages for the SciQuant's packages.","category":"page"},{"location":"#Contents","page":"Introduction","title":"Contents","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Depth = 1","category":"page"},{"location":"#How-to-start","page":"Introduction","title":"How to start","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"There are different ways to use the tutorials:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"[Recommended] Reading the html version of the tutorials. This is the recommended way if you want rapid access to the material with no setup steps. Simply click in one of the links in the Contents section.\n[Recommended] Running the Jupyter notebooks locally. A working installation of Julia in the system is required. See instructions in the How to run the notebooks locally section. This is the recommended way to follow the tutorials if you want to run the code and inspect the generated results with Paraview.\nRunning the notebook remotely via binder. In that case, go to the desired tutorial and click the icon (Image: ). No local installation of Julia needed.\nReading a non-interactive version of the notebook via nbviewer. In that case, go to the desired tutorial and click the icon (Image: )","category":"page"},{"location":"#How-to-run-the-notebooks-locally","page":"Introduction","title":"How to run the notebooks locally","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Clone the repository","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"$ git clone https://github.com/SciQuant/Tutorials.git","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Move into the folder and open a Julia REPL setting the current folder as the project environment.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"$ cd Tutorials\n$ julia --project=.\n               _\n   _       _ _(_)_     |  Documentation: https://docs.julialang.org\n  (_)     | (_) (_)    |\n   _ _   _| |_  __ _   |  Type \"?\" for help, \"]?\" for Pkg help.\n  | | | | | | |/ _` |  |\n  | | |_| | | | (_| |  |  Version 1.5.0 (2020-08-01)\n _/ |\\__'_|_|_|\\__'_|  |  Official https://julialang.org/ release\n|__/                   |\n\njulia>\n","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Instantiate the environment. This will automatically download all required packages.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# Type ] to enter in pkg mode\n(Tutorials) pkg> instantiate","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Build the notebooks","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"# Type Ctrl+C to get back to command mode\njulia> include(\"deps/build.jl\")","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Open the notebooks","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"julia> using IJulia\njulia> notebook(dir=pwd())","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"This will open a browser window. Navigate to the notebooks folder and open the tutorial you want. Enjoy!","category":"page"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"EditURL = \"https://github.com/SciQuant/Tutorials/blob/master/src/libor_market_model.jl\"","category":"page"},{"location":"pages/t008_libor_market_model/#Tutorial-8:-Libor-Market-Model","page":"8 Libor Market Model","title":"Tutorial 8: Libor Market Model","text":"","category":"section"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"(Image: ) (Image: )","category":"page"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"In this tutorial, you will learn:","category":"page"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"How to declare Libor Market Model dynamics correctly.","category":"page"},{"location":"pages/t008_libor_market_model/#Introduction","page":"8 Libor Market Model","title":"Introduction","text":"","category":"section"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"","category":"page"},{"location":"pages/t008_libor_market_model/","page":"8 Libor Market Model","title":"8 Libor Market Model","text":"This page was generated using Literate.jl.","category":"page"}]
}
